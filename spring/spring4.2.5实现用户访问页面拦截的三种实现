1、用<mvc:interceptors>拦截器，静态资源交给web容器忽略拦截
①spring-mvc.xml
<!--配置拦截器, 多个拦截器,顺序执行 -->
<mvc:interceptors>
	<mvc:interceptor>
		<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
		<mvc:mapping path="/**" />
		<bean class="com.rescam.bimt.nm.common.interceptor.AuthInterceptor"></bean>
	</mvc:interceptor>
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
</mvc:interceptors>
②web.xml(忽略拦截指定的文件类型)
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.html</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.xml</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.htm</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.jpg</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.gif</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.png</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.js</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.css</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.swf</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.json</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.mp4</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.mp3</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.ogg</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.wav</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.mpg</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.jpeg</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.webm</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.bmp</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.pdf</url-pattern>
</servlet-mapping>
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>*.cur</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.eot</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.svg</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.ttf</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.woff</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.woff2</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.otf</url-pattern>
</servlet-mapping>

2、用<mvc:interceptors>拦截器，静态资源也由<mvc:interceptors>忽略拦截
<!--配置拦截器, 多个拦截器,顺序执行 -->
<mvc:interceptors>
	<mvc:interceptor>
		<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
		<mvc:mapping path="/**" />
        <!-- 忽略拦截指定文件夹下的内容 -->
		<mvc:exclude-mapping path="/css/**"/>
		<mvc:exclude-mapping path="/fonts/**"/>
		<mvc:exclude-mapping path="/images/**"/>
		<mvc:exclude-mapping path="/js/**"/>
		<mvc:exclude-mapping path="/upload/**"/>
		<bean class="com.rescam.bimt.nm.common.interceptor.AuthInterceptor"></bean>
	</mvc:interceptor>
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
</mvc:interceptors>

3、拦截RequestMapping
<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    <property name="interceptors">
        <bean class="com.rescam.bimt.nm.common.interceptor.AuthInterceptor"/>
    </property>
</bean>
有两点需要注意：
1)必须放在<mvc:annotation-driven conversion-service="conversionService" />的上面，不然不起作用。
2)只会拦截Controller中@RequestMapping的请求，其余的一律忽略，包括404请求。
